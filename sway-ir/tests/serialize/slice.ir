script {
    entry fn main() -> u64 {
        local { u64, u64 } __anon_0
        local slice __anon_1
        local slice s
// check: local slice s

        entry():
        v0 = const string<10> "foo \x5ct bar"
        v1 = ptr_to_int v0 to u64
        v2 = get_local ptr { u64, u64 }, __anon_0
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3
        store v1 to v4
        v5 = const u64 1
        v6 = get_elem_ptr v2, ptr u64, v5
        v7 = const u64 10
        store v7 to v6
        v8 = get_local ptr slice, __anon_1
        mem_copy_bytes v8, v2, 16
        v9 = load v8
        v10 = get_local ptr slice, s
        store v9 to v10
        v11 = get_local ptr slice, s
        v12 = load v11
        v13 = get_local ptr slice, s
        v14 = load v13
        v15 = call f_0(v12, v14)
        ret u64 v15
    }

    fn f_0(a: slice, b: slice) -> u64 {
        entry(a: slice, b: slice):
        v0 = const u64 2
        ret u64 v0
    }
}